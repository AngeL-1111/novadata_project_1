from pymongo import MongoClient
from datetime import datetime, timedelta
from pprint import pprint
import json
import os

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø—Ä–∏–Ω—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏
client = MongoClient("mongodb://localhost:27017/")
db = client["my_database"]
events_col = db["user_events"]
archived_col = db["archived_users"]

# print("\n –í—Å–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–∏:")
# for doc in events_col.find():
#     pprint(doc)

#############################################################################

# –∑–∞–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–´–µ —Ä–∞–º–∫–∏
now = datetime.now()
day_m30 = now - timedelta(days=30)
day_m14 = now - timedelta(days=14)

# –≥—Ä—É–ø–∏—Ä—É–µ–º –ø–æ user_id –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Éc–ª–æ–≤–∏—è —á—Ç–æ –∑–∞—Ä–µ–≥–∞–Ω <30 + –ø–æ—Å–ª. –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å <14
pipeline = [
    {
        "$group": {
            "_id": "$user_id",
            "last_event": {"$max": "$event_time"},
            "signup_event": {"$first": "$$ROOT"}
        }
    },
    {
        "$match": {
            "last_event": {"$lt": day_m14},
            "signup_event.user_info.registration_date": {"$lt": day_m30}
        }
    }
]

inactive_users = list(events_col.aggregate(pipeline))

# –ø–∞—Ä—Å–∏–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∞—Ä—Ö–∏–≤
to_archive = [doc["signup_event"] for doc in inactive_users]

# –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —é–∑–µ—Ä–æ–≤ –≤ –∞—Ä—Ö–∏–≤
if to_archive: # –µ—Å–ª–∏ —Ç–∞–∫–∏–µ –µ—Å—Ç—å, —á—Ç–æ–± –µ—Å–ª–∏ –Ω–µ—Ç –∫–æ–¥ –Ω–µ –ø–∞–¥–∞–ª
    archived_col.drop()  # –Ω–µ–º–Ω–æ–≥–æ –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    archived_col.insert_many(to_archive)

    # –æ—Ç—á—ë—Ç
    report = {
        "date": now.strftime("%Y-%m-%d"), # —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞
        "archived_users_count": len(to_archive), # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —é–∑–µ—Ä–æ–≤
        "archived_user_ids": [doc["user_id"] for doc in to_archive] # –ª–∏—Å—Ç id-—à–Ω–∏–∫–æ–≤
    }

    # –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    output_dir = "reports"
    os.makedirs(output_dir, exist_ok=True)
    # –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –Ω—ç–π–º–∏–Ω–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –±—É–¥–µ—Ç –≤ –î–ê–ì–µ –∫—Ä—É—Ç–∏—Ç—å—Å—è)
    report_file = os.path.join(output_dir, f"archived_{now.strftime('%Y_%m_%d')}.json") 

    # –æ—Ç–∫—Ä—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç –≤ —Ä–µ–∂–∏–º–µ write, –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ—Å–ª–∏ –µ—Å—Ç—å, –¥–µ–ª–∞–µ–º 4 –ø—Ä–æ–±–µ–ª–∞ –æ—Ç—Å—Ç—É–ø–æ–≤ –¥–ª—è –¥–∂–æ–Ω–∞
    with open(report_file, "w") as f:
        json.dump(report, f, indent=4)

    print(f"‚úÖ –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(to_archive)}")
    print(f"üìÅ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: {report_file}")
else:
    print("‚ÑπÔ∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏ —Å–µ–≥–æ–¥–Ω—è.")
